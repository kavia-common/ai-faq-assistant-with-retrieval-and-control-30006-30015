{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service 'RagService' that handles retrieval and communication logic for a Retrieval-Augmented Generation (RAG) system, including mock knowledge base data and methods for simulating retrieval, tool selection, and answer synthesis.", "external_files": ["../utils/delay"], "external_methods": ["delay"], "published": ["Role", "ChatMessage", "QueryOptions", "RagService"], "classes": [{"name": "RagService", "description": "An Angular injectable service orchestrating retrieval, simulation of MCP tool calls, and mock generation for a RAG-powered chatbot system."}], "methods": [{"name": "async ask(question: string, opts?: QueryOptions): Promise<ChatMessage> { ask", "description": "Public method to process a question, perform retrieval, select a tool, synthesize an answer, and simulate latency.", "scope": "RagService", "scopeKind": "class"}, {"name": "private async retrieveFromChroma(query: string, topic?: string): Promise<string[]> { retrieveFromChroma", "description": "Mocked method to simulate retrieval of documents based on a question and optional topic.", "scope": "RagService", "scopeKind": "class"}, {"name": "private selectMcpTool(question: string): string { selectMcpTool", "description": "Simple heuristic to select a mock MCP tool based on question content.", "scope": "RagService", "scopeKind": "class"}, {"name": "private synthesizeAnswer(question: string, docs: string[], tool: string): string { synthesizeAnswer", "description": "Constructs a simulated answer report incorporating retrieved docs and selected tool.", "scope": "RagService", "scopeKind": "class"}], "calls": ["this.retrieveFromChroma", "this.selectMcpTool", "this.synthesizeAnswer", "delay"], "search-terms": ["RagService", "retrieval", "mock knowledge base", "MCP tool selection", "simulate latency", "Angular service", "chat message", "question processing"], "state": 2, "file_id": 33, "knowledge_revision": 72, "git_revision": "", "ctags": [{"_type": "tag", "name": "ChatMessage", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^export interface ChatMessage {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "QueryOptions", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^export interface QueryOptions {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "RagService", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^export class RagService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "Role", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^export type Role = 'user' | 'assistant' | 'system';$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "answer", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^    const answer = this.synthesizeAnswer(question, docs, toolUsed);$/", "language": "TypeScript", "kind": "constant", "scope": "RagService.ask", "scopeKind": "method"}, {"_type": "tag", "name": "ask", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^  async ask(question: string, opts?: QueryOptions): Promise<ChatMessage> {$/", "language": "TypeScript", "kind": "method", "scope": "RagService", "scopeKind": "class"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^    const base = this.mockKnowledgeBase[key];$/", "language": "TypeScript", "kind": "constant", "scope": "RagService.retrieveFromChroma", "scopeKind": "method"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^  content: string;$/", "language": "TypeScript", "kind": "property", "scope": "ChatMessage", "scopeKind": "interface"}, {"_type": "tag", "name": "context", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^    const context = docs.map((d, i) => `\u2022 ${d}`).join('\\\\n');$/", "language": "TypeScript", "kind": "constant", "scope": "RagService.synthesizeAnswer", "scopeKind": "method"}, {"_type": "tag", "name": "docs", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^    const docs = await this.retrieveFromChroma(question, opts?.topic);$/", "language": "TypeScript", "kind": "constant", "scope": "RagService.ask", "scopeKind": "method"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^  error?: boolean;$/", "language": "TypeScript", "kind": "property", "scope": "ChatMessage", "scopeKind": "interface"}, {"_type": "tag", "name": "key", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^    const base = this.mockKnowledgeBase[key];$/", "language": "TypeScript", "kind": "constant", "scope": "RagService.retrieveFromChroma", "scopeKind": "method"}, {"_type": "tag", "name": "key", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^    const key = topic && this.mockKnowledgeBase[topic] ? topic : 'default';$/", "language": "TypeScript", "kind": "constant", "scope": "RagService.retrieveFromChroma", "scopeKind": "method"}, {"_type": "tag", "name": "mockKnowledgeBase", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^  private mockKnowledgeBase: Record<string, string[]> = {$/", "language": "TypeScript", "kind": "property", "scope": "RagService", "scopeKind": "class"}, {"_type": "tag", "name": "retrieveFromChroma", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^  private async retrieveFromChroma(query: string, topic?: string): Promise<string[]> {$/", "language": "TypeScript", "kind": "method", "scope": "RagService", "scopeKind": "class"}, {"_type": "tag", "name": "role", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^  role: Role;$/", "language": "TypeScript", "kind": "property", "scope": "ChatMessage", "scopeKind": "interface"}, {"_type": "tag", "name": "selectMcpTool", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^  private selectMcpTool(question: string): string {$/", "language": "TypeScript", "kind": "method", "scope": "RagService", "scopeKind": "class"}, {"_type": "tag", "name": "subset", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^    const subset = base.filter(s => s.toLowerCase().includes(query.toLowerCase().split(' ')[0] |/", "language": "TypeScript", "kind": "constant", "scope": "RagService.retrieveFromChroma", "scopeKind": "method"}, {"_type": "tag", "name": "synthesizeAnswer", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^  private synthesizeAnswer(question: string, docs: string[], tool: string): string {$/", "language": "TypeScript", "kind": "method", "scope": "RagService", "scopeKind": "class"}, {"_type": "tag", "name": "toolUsed", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^    const toolUsed = this.selectMcpTool(question);$/", "language": "TypeScript", "kind": "constant", "scope": "RagService.ask", "scopeKind": "method"}, {"_type": "tag", "name": "topic", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^    const key = topic && this.mockKnowledgeBase[topic] ? topic : 'default';$/", "language": "TypeScript", "kind": "constant", "scope": "RagService.retrieveFromChroma", "scopeKind": "method"}, {"_type": "tag", "name": "topic", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-retrieval-and-control-30006-30015/faq_chatbox_frontend/src/app/core/rag.service.ts", "pattern": "/^  topic?: string;$/", "language": "TypeScript", "kind": "property", "scope": "QueryOptions", "scopeKind": "interface"}], "hash": "4a66967311341b38cc81e71b91bae525", "format-version": 4, "code-base-name": "faq_chatbox_frontend", "filename": "faq_chatbox_frontend/src/app/core/rag.service.ts", "fields": [{"name": "export interface ChatMessage {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export interface QueryOptions {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "content: string;", "scope": "ChatMessage", "scopeKind": "interface", "description": "unavailable"}, {"name": "error?: boolean;", "scope": "ChatMessage", "scopeKind": "interface", "description": "unavailable"}, {"name": "private mockKnowledgeBase: Record<string, string[]> = {", "scope": "RagService", "scopeKind": "class", "description": "unavailable"}, {"name": "role: Role;", "scope": "ChatMessage", "scopeKind": "interface", "description": "unavailable"}, {"name": "topic?: string;", "scope": "QueryOptions", "scopeKind": "interface", "description": "unavailable"}], "revision_history": [{"72": ""}]}